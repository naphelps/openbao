# Creates a GitHub Release.
# Workflow is manually run.
# Preselect branch or tag before running this workflow.
name: release

on:
  workflow_dispatch:
    inputs:
      # Defaults to publishing draft releases.
      # Review draft before formally releasing!
      draft:
        description: "Create a release draft"
        required: false
        default: true
        type: boolean
      prerelease:
        description: "Mark this release as a prerelease"
        required: false
        default: 'auto'
        type: choice
        # auto follows semver. Prerelease versions are hyphenated with a label. ex. 0.0.0-alpha, 1.0.0-rc1
        options:
          - auto
          - 'true'
          - 'false'
      #generate-release-notes:
      #  description: "Generate the release notes automatically"
      #  required: true
      #  default: true
      #  type: boolean
      #body:
      #  description: "Release notes to prepend"
      #  required: false
      #  type: string
      # Prerelease will override
      make-latest:
        description: "Latest release"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      #- name: Maximize build space
      #  uses: easimon/maximize-build-space@v10
      #  with:
      #    root-reserve-mb: 512
      #    swap-size-mb: 1024
      #    temp-reserve-mb: 100
      #    remove-android: 'true'
      #    remove-codeql: 'true'
      #    remove-docker-images: 'true'
      #    remove-dotnet: 'true'
      #    remove-haskell: 'true'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required by GoRelease

      - name: Golang Setup
        uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true

      - name: Go Check
        run: go version

        # Supports Buildx
      - name: QEMU
        uses: docker/setup-qemu-action@v3

      - name: Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cosign
        uses: sigstore/cosign-installer@v3

#      - name: GPG
#        uses: crazy-max/ghaction-import-gpg@v6
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.GPG_PASSWORD }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ./dist/*.deb
            ./dist/*.rpm
          key: ${{ github.ref }}
          #./dist/*.apk

      - name: "Docker Login: ghcr.io"
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout=60m --verbose --debug
        env:
          #COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GITHUB_RELEASE_DRAFT: true
          #${{ inputs.draft }}
          GITHUB_RELEASE_PRERELEASE: ${{ inputs.prerelease }}
          GITHUB_RELEASE_MAKE_LATEST: ${{ inputs.make-latest }}
          #NFPM_DEFAULT_DEB_PASSPHRASE: ${{ secrets.GPG_PASSWORD }}
          #NFPM_DEFAULT_RPM_PASSPHRASE: ${{ secrets.GPG_PASSWORD }}
          SKIP_BUILD_LINUX: 'true'
